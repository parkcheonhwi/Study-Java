출력 메소드
	print() : 마지막에 자동으로 줄바꿈이 되지 않고 아래의 문장과 이어서 출력된다.
	println() : 마지막에 자동으로 줄바꿈된다.
	printf()

서식 문자(format)
	반드시 따옴표 안에서 작성한다.
	
	%d : decimal(10진수 정수)
	%o : ocatal(8진수 정수)
	%x : hexadecimal(16진수 정수)
	%f : float(실수)
	%c : character(문자)
	%s : string(문자열)


출력 메소드의 목적
	전달받은 데이터 및 전달할 데이터 검사, 오류 발생 지점 구체화 및 검사
========================================================================================
변수: 저장공간

	x		=	10
	저장공간의		대입	값
	이름		연산자

자료형(type, 종류)

	자료형	type	byte	값
	
	정수형	int	4	10, 32, 543, -32, 2147483647, ...
	실수형	float	4	10.5F, -0.9F, 0.0F, 123.45645F, ...
		double	8	10.5, -0.9, 0.0, 123.45645, ...
	문자형	char	2	'김', 'A', '0', '.', ...
	문자열	String	?	"한동석", "ABC", "A", "0", ...

변수의 선언
	type name = value;
	자료형 변수명 = 초기값; //초기화
	자료형 변수명;

	예)
		int x = 10;
		
		x라는 이름의 저장공간이 할당(allocation)되고 그 안에 10이 들어간다.

RAM(메모리)

====================
OS Kernel Space
====================
Stack
--------------------
Free
--------------------
Heap
====================
BSS
====================
Data 영역
====================
Text 영역
====================

	int x = 10;
	x라는 이름의 저장공간이 RAM에 할당되고 10이라는 값이 들어간다.

주소(해시코드)
	int x = 10;
	x라는 이름의 저장공간이 RAM에 할당되면 고유한 값인 주소값이 부여된다.

변수의 사용
	int data = 20; // 저장공간
	data = 30; // 저장공간
	System.out.print(data + 9); // 값
	data = data + 7; // 저장공간, 값
	data - 9; // 값

변수 선언 시 주의사항
	1. 같은 이름의 변수로 선언할 수 없다.
	2. 초기화를 해준다.
	3. 되도록 선언부에 한꺼번에 선언한다(영역 상단).

변수명 주의사항
	문자로 시작해야 한다.
	특수문자는 사용할 수 없다. 단, _는 허용한다.
	소문자로 시작한다.
	공백을 사용할 수 없다.
	되도록 한글은 사용하지 않는다.
	명사로 사용한다.
	뜻이 있는 단어를 사용한다.

	a, b, c, d, e, ... (X)
	data, number, age, name, ... (O)

	happyDay(카멜 표기법), happy_day(언더파 표기법)

변수를 사용하는 이유
	1. 반복되는 값을 쉽게 관리할 수 있다.
	2. 의미 없는 값을 하나의 정보로 만들기 위해서 사용한다(자료구조).
======================================================================================
상수 : 항상 그대로인 수
	값을 변경할 수 없도록 한다.

	
상수의 선언
	final type name = value;

상수를 사용하는 이유
	1. 의미 없는 값이 의미를 부여하기 위해서
	2. 오타 방지
======================================================================================
형변환
	- 자동 형변환
		정수 + 정수 = 정수
		정수 + 실수 = 실수
		3 + 0.0 = 3.0
		5 / 2 = 2
		5.0 / 2 = 2.5

		문자 + 정수 = 정수


	- 강제 형변환
		(type)value
		(double)3
	
문자열 형변환
	1. 다른 자료형을 문자열로
		문자열과 다른 일반 자료형을 연결하면 결과는 문자열이 된다.

	2. 문자열을 다른 자료형으로
		일반 자료형은 일반 자료형끼리만 형변환이 가능하다.
		문자열 타입은 클래스 타입이므로, 일반 자료형의 클래스타입의 도움을 받아야한다.

		Integer.parseInt("") => 문자열에서 변환된 정수 값
		Double.parseDouble("") => 문자열에서 변환된 실수 값
		...
====================================================================================
입력
	커서가 깜빡이고 있는 상태.
	입력하기 전에 출력을 통해 어떤 값을 입력해야할지 사용자에게 알려주어야 한다.

입력 클래스
	Scanner sc = new Scanner(System.in);

입력 메소드





















