입력
	커서가 깜빡이고 있는 상태.
	입력하기 전에 출력을 통해 어떤 값을 입력해야할지 사용자에게 알려주어야 한다.

입력 클래스
	Scanner sc = new Scanner(System.in);

입력 메소드
	next() : 사용자가 입력한 문자열 값
		- 사용자가 입력한 값 중 공백 또는 줄바꿈 문자를 구분점으로 각 문자열을 분리한다.
		- 첫 번째 문자열을 첫 번째 next()에 담고
		  두 번째 문자열은 두 번째 next()에 담는다.

	nextLine() : 사용자가 입력한 문자열 값
		- 공백 또는 줄바꿈 문자도 값으로 취급하기 때문에 그대로 입력받는다.
============================================================================================
연산자
	기능이 있는 특수문자

연산자의 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관게 연산자
	논리 연산자
	삼항 연산자
	대입 연산자

결합성
	하나의 수식에 동일한 연산자가 여러 번 사용되면 알맞은 방향으로 결합되어 연산되는 성질.
--------------------------------------------------------------------------------------------
논리형(boolean)
	참: true
	거짓: false

	boolean 변수명 = 값(true, false);
	-------
	1byte

조건식
	결과가 참 또는 거짓, 둘 중 하나가 나오는 식.

	관계 연산자
		==	: 같다
		!=	: 같지 않다
		>, <	: 초과, 미만
		>=, <=	: 이상, 이하

	논리 연산자
		&&, A && B, AND, 두 조건식 모두 참이면 참
		||, A || B, OR, 둘 중 하나라도 참이면 참

	단항 연산자
		!, !A, NOT, 조건식이 참이면 거짓으로, 거짓이면 참으로 변경
-------------------------------------------------------------------------------------------
삼항 연산자(? :) : 값으로 봐야한다!
	조건식 ? 참 : 거짓

	int result = 10 > 9 ? 10 : 9;
	단, 참과 거짓 자리에는 값만 작성할 수 있다.

삼항 연산자를 사용해야 할 때
	조건식이 딱 한 개 있을 때에만 사용하자!
------------------------------------------------------------------------------------------
제어문
 ▶ 조건문
	▷ if문
		
	if(조건식){
		실행할 문장;
	}
	위의 조건식 결과와 상관없이 무조건 검사
	if(조건식){
		실행할 문장;
	}
	if(조건식){
		실행할 문장;
	}...


	if(조건식){
		실행할 문장;
	}
	위 조건식이 false일 경우만 검사, 아니면 검사하지 않음.
	else if(조건식){
		실행할 문장;
	}
	...
	}
	else {
		실행할 문장
	}

	▷ switch문

	switch(값){
	case 값1:
		실행할 문장;
		break;
	case 값2:
		실행할 문장;
		break;
	case 값3:
		실행할 문장;
		break;
	...
	default:
		실행할 문장;
		break;
	}

삼항 연산자, if문, switch문의 비교
	삼항 연산자: 조건식이 1개 있을 경우 사용
	if문: 조건식에 비교(>, <, >=, <=) 연산자를 사용하거나, 여러 개의 조건식을 논리 연산자(&&, ||) 사용
	switch: 하나의 변수에 여러 개의 값이 담길 수 있고, 각 값이 같은 지를 비교할 때 사용

 ▶ 반복문
	대입 연산자(복합 대입 연산자, 누적 연산자)
	
	int money = 10000;
	//money = money - 1000;
	money -= 1000;
	System.out.println(money);

	int data = 0;
	//data = data + 1;
	//data += 1;
	data++;
	System.out.println(data);

	증감 연산자
		전위형 : 해당 라인부터 바로 적용
			++data, --data

		후위형 : 다음 라인부터 적용
			data++, data--

		
	▷ for문
		int i = 0; i < 10; i = i + 1
		for(초기식; 조건식; 증감식){
			실행할 문장;
		}

	1. 초기식
	------------
	2. 조건식
	3. 실행할 문장
	4. 증감식
	5. 조건식
	6. 실행할 문장
	7. 증감식
	...

	▷ while문
	▷ do~while문




















